{"version":3,"sources":["components/Icons/All/All.tsx","components/Icons/Head/Head.tsx","components/Icons/Tail/Tail.tsx","components/ContentDiff/ContentDiff.tsx","components/InputPanel/InputPanel.tsx","components/Footer/Footer.tsx","tests/content1.js","tests/content2.js","App.tsx","reportWebVitals.ts","index.tsx"],"names":["All","className","viewBox","version","width","height","fillRule","d","Head","Tail","Content","Layout","DISPLAY_TYPE","ContentDiff","diffResults","isFile","useState","lineGroup","setLineGroup","displayType","setDisplayType","isSplit","setIsSplit","useEffect","parseResults","newArr","initLineGroup","map","item","index","originArr","added","removed","value","count","slice","head","hidden","tail","strArr","split","filter","type","strLength","length","BLOCK_LENGTH","content","lStartNum","rStartNum","forEach","leftPos","rightPos","parsLineBlock","copyOfLG","targetGroup","concat","hiddenLength","parseHiddenBtn","isSingle","onClick","parseCombinePart","leftPart","rightPart","lType","lContent","lLeftPos","rType","rContent","rRightPos","leftArr","rightArr","lClass","rClass","parseLineNumPadding","parsePaddingContent","parseSplitCode","targetBlock","isHead","shift","renderDiffLine","isNormal","cls","space","sitem","sindex","posMark","parseLineNum","lineNum","origin","Group","size","onChange","e","target","onChangeDisplayType","Button","contentList","i","push","nextTarget","nextIsPlus","renderSplitContent","jsDiff","require","FormItem","Form","Item","TextArea","Input","layout","labelCol","span","wrapperCol","SeleLayout","linesMethods","InputPanel","leftValue","setLeftValue","rightValue","setRightValue","method","setMethod","setDiffResults","checkDiff","onChangeInput","results","label","style","defaultValue","Option","Footer","Date","getFullYear","content1","array","object","a","c","g","content2","c2","MENU_TAB","App","menuTab","setMenuTab","RenderContent","diffJson","mode","key","onClickChangeMenuTab","defaultSelectedKeys","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4YAkBeA,EAlBH,WACV,OACE,qBACEC,UAAU,mBACVC,QAAQ,YACRC,QAAQ,MACRC,MAAM,KACNC,OAAO,KACP,cAAY,OANd,SAQE,sBACEC,SAAS,UACTC,EAAE,miBCMKC,EAlBF,WACX,OACE,qBACEP,UAAU,mBACVC,QAAQ,YACRC,QAAQ,MACRC,MAAM,KACNC,OAAO,KACP,cAAY,OANd,SAQE,sBACEC,SAAS,UACTC,EAAE,gbCMKE,EAlBF,WACX,OACE,qBACER,UAAU,mBACVC,QAAQ,YACRC,QAAQ,MACRC,MAAM,KACNC,OAAO,KACP,cAAY,OANd,SAQE,sBACEC,SAAS,UACTC,EAAE,obCLFG,EAAYC,IAAZD,QAEFE,EACK,EADLA,EAEG,EA2UMC,EAtUK,SAAC,GAA+C,IAA7CC,EAA4C,EAA5CA,YAAaC,EAA+B,EAA/BA,OAClC,EAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAsCF,mBAAiBJ,GAAvD,mBAAOO,EAAP,KAAoBC,EAApB,KACA,EAA8BJ,mBAC5BG,IAAgBP,GADlB,mBAAOS,EAAP,KAAgBC,EAAhB,KAIAC,qBAAU,WACRC,EAAaV,KAEZ,CAACA,IAEJS,qBAAU,WACRD,EAAWH,IAAgBP,KAC1B,CAACO,IAEJ,IAIMK,EAAe,SAACC,GACpB,GAAuC,kBAA3BA,GAAUX,GAAtB,CACA,IAAMY,GAAiBD,GAAUX,GAAaa,KAC5C,SAACC,EAAWC,EAAYC,GAAoB,IAAD,EACrCC,EAAOC,EAASC,EAAOC,EACvBnB,GACFgB,EAAoB,MAAZH,EAAK,GACbI,EAAsB,MAAZJ,EAAK,GACfK,EAAQL,EAAKO,MAAM,GACnBD,EAAQ,IAERH,EAAQH,EAAKG,MACbC,EAAUJ,EAAKI,QACfC,EAAQL,EAAKK,MACbC,EAAQN,EAAKM,OAEf,IAEIE,EAAMC,EAAQC,EAFZC,GAAc,QAAL,EAAAN,SAAA,eAAOO,MAAM,MAAMC,QAAO,SAACb,GAAD,OAAeA,OAAS,GAC3Dc,GAAQX,EAAS,IAASC,GAAW,MAAQ,IAEnD,GAAa,MAATU,EACFL,EAAS,GACTC,EAAO,GACPF,EAAOG,MACF,CACL,IAAMI,EAAYJ,EAAOK,OACrBD,GAAaE,GACfR,EAAS,GACTC,EAAO,GACPF,EAAOG,IAEPH,EAAOG,EAAOJ,MAAM,EApDX,GAqDTE,EAASE,EAAOJ,MArDP,EAqD2BQ,EArD3B,GAsDTL,EAAOC,EAAOJ,MAAMQ,EAtDX,IAyDb,MAAO,CACLD,OACAR,QACAY,QAAS,CACPT,SACAD,OACAE,YAKJS,EAAY,EACZC,EAAY,EAChBtB,EAAcuB,SAAQ,SAACrB,GACrB,IAAQc,EAAgBd,EAAhBc,KAAMR,EAAUN,EAAVM,MACdN,EAAKsB,QAAUH,EACfnB,EAAKuB,SAAWH,EAChBD,GAAsB,MAATL,EAAe,EAAIR,EAChCc,GAAsB,MAATN,EAAe,EAAIR,KAElChB,EAAaQ,KAuDT0B,EAAgB,SAACV,EAAWb,GAChC,IAAMwB,EAAgBpC,EAAUkB,QAC1BmB,EAAcD,EAASxB,GAC7B,EAA+ByB,EAAYR,QAAnCV,EAAR,EAAQA,KAAME,EAAd,EAAcA,KAAMD,EAApB,EAAoBA,OACpB,GAAa,SAATK,EACFY,EAAYR,QAAQV,KAAOA,EAAKmB,OAAOlB,EAAOF,MAAM,EAzIrC,IA0IfmB,EAAYR,QAAQT,OAASA,EAAOF,MA1IrB,QA2IV,GAAa,SAATO,EAAiB,CAC1B,IAAMc,EAAenB,EAAOO,OAC5BU,EAAYR,QAAQR,KAAOD,EACxBF,MAAMqB,EA9IM,GA+IZD,OAAOjB,GACVgB,EAAYR,QAAQT,OAASA,EAAOF,MAAM,EAAGqB,EAhJ9B,QAkJfF,EAAYR,QAAQV,KAAOA,EAAKmB,OAAOlB,GACvCiB,EAAYR,QAAQT,OAAS,GAE/BgB,EAASxB,GAASyB,EAClBpC,EAAamC,IAGTI,EAAiB,SAACpB,EAAaR,GACnC,IAAM6B,EAAWrB,EAAOO,OAASC,EACjC,OACE,sBAAoB5C,UAAU,sBAA9B,UACE,qBAAKA,UAAS,kBAAaoB,EAAU,aAAe,IAApD,SACGqC,EACC,qBAAKzD,UAAU,QAAQ0D,QAAS,kBAAMP,EAAc,MAAOvB,IAA3D,SACE,cAAC,EAAD,MAGF,qCACE,qBACE5B,UAAU,QACV0D,QAAS,kBAAMP,EAAc,OAAQvB,IAFvC,SAIE,cAAC,EAAD,MAEF,qBACE5B,UAAU,QACV0D,QAAS,kBAAMP,EAAc,OAAQvB,IAFvC,SAIE,cAAC,EAAD,WAKR,qBAAK5B,UAAS,qBAAgBoB,EAAU,iBAAmB,IAA3D,SACE,qBACEpB,UAAS,sBAAiByD,EAAW,GAAK,YAD5C,8BAEgBrB,EAAOO,OAFvB,gBAxBK,aAgCPgB,EAAmB,WAAoC,IAAnCC,EAAkC,uDAAvB,GAAIC,EAAmB,uDAAP,GAE3CC,EAIFF,EAJJnB,KACSsB,EAGLH,EAHJf,QACSmB,EAELJ,EAFJX,QAIMgB,EAICJ,EAJPpB,KACSyB,EAGFL,EAHPhB,QAEUsB,EACHN,EADPX,SAEIkB,GAAkB,OAARL,QAAQ,IAARA,OAAA,EAAAA,EAAU5B,OAAQ,GAC5BkC,GAAmB,OAARH,QAAQ,IAARA,OAAA,EAAAA,EAAU/B,OAAQ,GAC7BmC,EAAmB,MAAVR,EAAgB,MAAQ,UACjCS,EAAmB,MAAVN,EAAgB,MAAQ,UACvC,OACE,qCACE,qBAAKjE,UAAU,iBAAf,SACGoE,EAAQ1C,KAAI,SAACC,EAAWC,GACvB,OACE,sBAAK5B,UAAS,kBAAasE,GAA3B,UACGE,EAAoBR,EAAWpC,GAC/B6C,EAAoB,MAAQ9C,KAFWC,QAOhD,qBAAK5B,UAAS,iBAAYoE,EAAQzB,OAAS,GAAK,WAAhD,SACG0B,EAAS3C,KAAI,SAACC,EAAWC,GACxB,OACE,sBAAK5B,UAAS,kBAAauE,GAA3B,UACGC,EAAoBL,EAAYvC,GAChC6C,EAAoB,MAAQ9C,KAFWC,YAWhD8C,EAAiB,SAACC,GAAqC,IAAnBC,IAAkB,yDAC1D,EAIID,EAHF9B,QAAWV,EADb,EACaA,KAAMC,EADnB,EACmBA,OAAQC,EAD3B,EAC2BA,KACzBY,EAEE0B,EAFF1B,QACAC,EACEyB,EADFzB,SAEF,OAAQ0B,EAASzC,EAAOE,GAAMX,KAAI,SAACC,EAAWC,GAC5C,IAAMiD,EAAQD,EAAS,EAAIzC,EAAKQ,OAASP,EAAOO,OAChD,OACE,gCACE,sBAAK3C,UAAU,iBAAf,UACGwE,EAAoBvB,EAAU4B,EAAQjD,GACtC6C,EAAoB,OAAS9C,MAEhC,sBAAK3B,UAAU,SAAf,UACGwE,EAAoBtB,EAAW2B,EAAQjD,GACvC6C,EAAoB,OAAS9C,SAPvBiD,EAAS,KAAO,MAAQhD,OAcnCkD,EAAiB,SAACnD,GAA8B,IAAnBiD,IAAkB,yDAEjDnC,EAIEd,EAJFc,KADF,EAKId,EAHFkB,QAAWV,EAFb,EAEaA,KAAME,EAFnB,EAEmBA,KAAMD,EAFzB,EAEyBA,OACvBa,EAEEtB,EAFFsB,QACAC,EACEvB,EADFuB,SAEI6B,EAAoB,MAATtC,EACXuC,EAAG,iBAAsB,MAATvC,EAAe,MAAQ,GAApC,YACE,MAATA,EAAe,UAAY,IAEvBwC,EAAQ,QACd,OAAQL,EAASzC,EAAOE,GAAMX,KAAI,SAACwD,EAAYC,GAC7C,IAAIC,EAAU,GACd,GAAIL,EAAU,CACZ,IAAMF,EAAQD,EAAS,EAAIzC,EAAKQ,OAASP,EAAOO,OAChDyC,GACGH,GAAShC,EAAU4B,EAAQM,IAASjD,OAAO,IAC3C+C,GAAS/B,EAAW2B,EAAQM,IAASjD,OAAO,QAE/CkD,EACW,MAAT3C,EACI4C,EAAapC,EAAUkC,GAAUF,EACjCA,EAAQI,EAAanC,EAAWiC,GAExC,OACE,sBAA2CnF,UAAWgF,EAAtD,UACE,qBAAKhF,UAAU,WAAf,SAA2BoF,IAC3B,qBAAKpF,UAAU,WAAf,SACE,sBAAKA,UAAU,WAAf,UACE,qBAAKA,UAAU,YAAf,SAA4B,IAAMyC,EAAO,MACxCgC,EAAoBS,WALhBN,EAAS,KAAO,MAAQO,OAanCE,EAAe,SAACC,GACpB,OAAQ,QAAUA,GAASpD,OAAO,IAG9BsC,EAAsB,SAACe,GAC3B,IAAM5D,GAAQ,QAAU4D,GAAQrD,OAAO,GACvC,OAAO,qBAAKlC,UAAU,UAAf,SAA0B2B,KAG7B8C,EAAsB,SAAC9C,GAC3B,OAAO,qBAAK3B,UAAU,WAAf,SAA2B2B,KAGpC,OACE,qCACE,qBAAK3B,UAAU,aAAf,SACE,eAAC,IAAMwF,MAAP,CACExD,MAAOd,EACPuE,KAAK,QACLC,SAAU,SAACC,GAAD,OAtSU,SAACA,GAC3BxE,EAAewE,EAAEC,OAAO5D,OAqSiB6D,CAAoBF,IAHzD,UAKE,cAAC,IAAMG,OAAP,CAAc9D,MAAOrB,EAArB,mBACA,cAAC,IAAMmF,OAAP,CAAc9D,MAAOrB,EAArB,0BAIJ,cAACF,EAAD,CAAST,UAAU,UAAnB,SACE,qBAAKA,UAAU,QAAf,SACGoB,EAjPkB,WAGzB,IAFA,IAAMuB,EAAS3B,EAAU2B,OACnBoD,EAAc,GACXC,EAAI,EAAGA,EAAIrD,EAAQqD,IAAK,CAC/B,IAAMrB,EAAc3D,EAAUgF,GAE5BvD,EAEOkC,EAFPlC,KACWL,EACJuC,EADP9B,QAAWT,OAEb,GAAa,MAATK,EACFsD,EAAYE,KACV,gCACGvB,EAAeC,GACdvC,EAAOO,QAAUa,EAAepB,EAAQ4D,IAAO,KAChDtB,EAAeC,GAAa,KAHrBqB,SAMP,GAAa,MAATvD,EAAc,CACvB,IAAMyD,EAAkBlF,EAAUgF,EAAI,IAAM,CAAEnD,QAAS,IACjDsD,EAAiC,MAApBD,EAAWzD,KAC9BsD,EAAYE,KACV,8BACGtC,EAAiBgB,EAAawB,EAAaD,EAAa,KADjDF,IAIZG,IAAcH,GAAQ,OACJ,MAATvD,GACTsD,EAAYE,KACV,8BAActC,EAAiB,GAAIgB,IAAzBqB,IAIhB,OAAO,8BAAMD,IAiNIK,GA7MVpF,EAAUU,KAAI,SAACC,EAAWC,GAC/B,IACEa,EAEEd,EAFFc,KACWL,EACTT,EADFkB,QAAWT,OAEP2C,EAAoB,MAATtC,EACjB,OACE,gCACGqC,EAAenD,GACdS,EAAOO,QAAUoC,GAAYvB,EAAepB,EAAQR,IAAW,KAChEkD,EAAenD,GAAM,KAHdC,cCnIZyE,G,OAASC,EAAQ,KACjBC,EAAWC,IAAKC,KACdC,EAAaC,IAAbD,SAEFE,EAAS,CACbC,SAAU,CAAEC,KAAM,GAClBC,WAAY,CAAED,KAAM,KAGhBE,EAAa,CACjBH,SAAU,CAAEC,KAAM,IAClBC,WAAY,CAAED,KAAM,KAGhBG,EAAe,CACnB,YACA,oBA6EaC,EAvEI,WACjB,MAAkCnG,mBAAiB,OAAnD,mBAAOoG,EAAP,KAAkBC,EAAlB,KACA,EAAoCrG,mBAAiB,MAArD,mBAAOsG,EAAP,KAAmBC,EAAnB,KACA,EAA4BvG,mBAAiB,aAA7C,mBAAOwG,EAAP,KAAeC,EAAf,KACA,EAAsCzG,mBAAS,IAA/C,mBAAOF,EAAP,KAAoB4G,EAApB,KAEAnG,qBAAU,WACRoG,MAEC,IAEH,IAAMC,EAAgB,SACpBlF,EACAkD,GAEa,SAATlD,GAAiB2E,EAAazB,EAAEC,OAAO5D,OAC9B,UAATS,GAAkB6E,EAAc3B,EAAEC,OAAO5D,QAOzC0F,EAAY,WAChB,IAAME,EAAUvB,EAAOkB,GAAQJ,EAAWE,GAC1CI,EAAeG,IAGjB,OACE,sBAAK5H,UAAU,UAAf,UACE,sBAAKA,UAAU,eAAf,UACE,cAACuG,EAAD,2BAAcK,GAAd,IAAsBiB,MAAM,OAAO7H,UAAU,QAA7C,SACE,cAAC0G,EAAD,CACEoB,MAAO,CAAE1H,OAAQ,KACjB2H,aAAcZ,EACdzB,SAAU,SAACC,GAAD,OAAOgC,EAAc,OAAQhC,SAG3C,cAACY,EAAD,2BAAcK,GAAd,IAAsBiB,MAAM,QAAQ7H,UAAU,QAA9C,SACE,cAAC0G,EAAD,CACEoB,MAAO,CAAE1H,OAAQ,KACjB2H,aAAcV,EACd3B,SAAU,SAACC,GAAD,OAAOgC,EAAc,QAAShC,YAI9C,sBAAK3F,UAAU,aAAf,UACE,cAACuG,EAAD,2BAAcS,GAAd,IAA0Ba,MAAM,UAAhC,SACE,cAAC,IAAD,CACEE,aAAcR,EACdO,MAAO,CAAE3H,MAAO,KAChBuF,SAhCa,SAAC1D,GACtBwF,EAAUxF,IA4BJ,SAKGiF,EAAavF,KAAI,SAACC,EAAMC,GACvB,OACE,cAAC,IAAOoG,OAAR,CAA2BhG,MAAOL,EAAlC,SACGA,GADiBC,WAO5B,cAAC,IAAD,CAAQa,KAAK,UAAUiB,QAASgE,EAAhC,wBAIF,cAAC,EAAD,CAAa7G,YAAaA,EAAaC,QAAQ,QChFtCmH,G,OAVA,WACb,IAAQA,EAAWvH,IAAXuH,OAER,OACE,eAACA,EAAD,CAAQjI,UAAU,SAAlB,0BACiB,IAAIkI,MAAOC,cAD5B,yBCRSC,G,cAAW,CACtBC,MAAO,CAAC,IAAK,IAAK,IAAK,IAAK,KAC5BC,OAAQ,CACNC,EAAG,IACHC,EAAG,IACH7C,EAAG,IACH8C,EAAG,IACHzC,EAAG,OCPM0C,EAAW,CACtBL,MAAO,CAAC,IAAK,IAAK,IAAK,IAAK,KAC5BC,OAAQ,CACNC,EAAG,IACHI,GAAI,IACJhD,EAAG,IACH8C,EAAG,KACHzC,EAAG,MCMDK,EAASC,EAAQ,IAEjBsC,EACG,IADHA,EAEK,IAgCIC,EA7BH,WACV,MAA8B9H,mBAAiB6H,GAA/C,mBAAOE,EAAP,KAAgBC,EAAhB,KAMMC,EAAgB,WACpB,IAAMpB,EAAUvB,EAAO4C,SAASb,EAAUM,GAC1C,OAAO,cAAC,EAAD,CAAa7H,YAAa+G,EAAS9G,QAAQ,KAGpD,OACE,eAAC,IAAD,WACE,eAAC,IAAD,CACEoI,KAAK,aACLxF,QAAS,SAACiC,GAAD,OAbc,SAACA,GAC5BoD,EAAWpD,EAAEwD,KAYYC,CAAqBzD,IAC1C0D,oBAAqB,CAACP,GAHxB,UAKE,cAAC,IAAKrC,KAAN,uBAAgBmC,GAChB,cAAC,IAAKnC,KAAN,uBAAgBmC,MAEjBE,IAAYF,GAAkB,cAAC,EAAD,IAC9BE,IAAYF,GAAoB,cAACI,EAAD,IACjC,cAAC,EAAD,QC9BSM,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.98ae783d.chunk.js","sourcesContent":["const All = () => {\n  return (\n    <svg\n      className=\"collapsible-icon\"\n      viewBox=\"0 0 16 16\"\n      version=\"1.1\"\n      width=\"16\"\n      height=\"16\"\n      aria-hidden=\"true\"\n    >\n      <path\n        fillRule=\"evenodd\"\n        d=\"M8.177.677l2.896 2.896a.25.25 0 01-.177.427H8.75v1.25a.75.75 0 01-1.5 0V4H5.104a.25.25 0 01-.177-.427L7.823.677a.25.25 0 01.354 0zM7.25 10.75a.75.75 0 011.5 0V12h2.146a.25.25 0 01.177.427l-2.896 2.896a.25.25 0 01-.354 0l-2.896-2.896A.25.25 0 015.104 12H7.25v-1.25zm-5-2a.75.75 0 000-1.5h-.5a.75.75 0 000 1.5h.5zM6 8a.75.75 0 01-.75.75h-.5a.75.75 0 010-1.5h.5A.75.75 0 016 8zm2.25.75a.75.75 0 000-1.5h-.5a.75.75 0 000 1.5h.5zM12 8a.75.75 0 01-.75.75h-.5a.75.75 0 010-1.5h.5A.75.75 0 0112 8zm2.25.75a.75.75 0 000-1.5h-.5a.75.75 0 000 1.5h.5z\"\n      ></path>\n    </svg>\n  );\n};\n\nexport default All;\n","const Head = () => {\n  return (\n    <svg\n      className=\"collapsible-icon\"\n      viewBox=\"0 0 16 16\"\n      version=\"1.1\"\n      width=\"16\"\n      height=\"16\"\n      aria-hidden=\"true\"\n    >\n      <path\n        fillRule=\"evenodd\"\n        d=\"M8.177 14.323l2.896-2.896a.25.25 0 00-.177-.427H8.75V7.764a.75.75 0 10-1.5 0V11H5.104a.25.25 0 00-.177.427l2.896 2.896a.25.25 0 00.354 0zM2.25 5a.75.75 0 000-1.5h-.5a.75.75 0 000 1.5h.5zM6 4.25a.75.75 0 01-.75.75h-.5a.75.75 0 010-1.5h.5a.75.75 0 01.75.75zM8.25 5a.75.75 0 000-1.5h-.5a.75.75 0 000 1.5h.5zM12 4.25a.75.75 0 01-.75.75h-.5a.75.75 0 010-1.5h.5a.75.75 0 01.75.75zm2.25.75a.75.75 0 000-1.5h-.5a.75.75 0 000 1.5h.5z\"\n      ></path>\n    </svg>\n  );\n};\n\nexport default Head;\n","const Tail = () => {\n  return (\n    <svg\n      className=\"collapsible-icon\"\n      viewBox=\"0 0 16 16\"\n      version=\"1.1\"\n      width=\"16\"\n      height=\"16\"\n      aria-hidden=\"true\"\n    >\n      <path\n        fillRule=\"evenodd\"\n        d=\"M7.823 1.677L4.927 4.573A.25.25 0 005.104 5H7.25v3.236a.75.75 0 101.5 0V5h2.146a.25.25 0 00.177-.427L8.177 1.677a.25.25 0 00-.354 0zM13.75 11a.75.75 0 000 1.5h.5a.75.75 0 000-1.5h-.5zm-3.75.75a.75.75 0 01.75-.75h.5a.75.75 0 010 1.5h-.5a.75.75 0 01-.75-.75zM7.75 11a.75.75 0 000 1.5h.5a.75.75 0 000-1.5h-.5zM4 11.75a.75.75 0 01.75-.75h.5a.75.75 0 010 1.5h-.5a.75.75 0 01-.75-.75zM1.75 11a.75.75 0 000 1.5h.5a.75.75 0 000-1.5h-.5z\"\n      ></path>\n    </svg>\n  );\n};\n\nexport default Tail;\n","import { useEffect, useState } from \"react\";\nimport { Layout, Radio, RadioChangeEvent } from \"antd\";\n\nimport { ContentDiffProps } from \"./ContentDiff.models\";\nimport \"./styles.css\";\nimport { All, Head, Tail } from \"../Icons\";\n\nconst { Content } = Layout;\n\nconst DISPLAY_TYPE = {\n  UNIFIED: 0,\n  SPLIT: 1\n};\n\nconst BLOCK_LENGTH = 3;\n\nconst ContentDiff = ({ diffResults, isFile }: ContentDiffProps) => {\n  const [lineGroup, setLineGroup] = useState([]);\n  const [displayType, setDisplayType] = useState<number>(DISPLAY_TYPE.SPLIT);\n  const [isSplit, setIsSplit] = useState<boolean>(\n    displayType === DISPLAY_TYPE.SPLIT\n  );\n\n  useEffect(() => {\n    parseResults(diffResults);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [diffResults]);\n\n  useEffect(() => {\n    setIsSplit(displayType === DISPLAY_TYPE.SPLIT);\n  }, [displayType]);\n\n  const onChangeDisplayType = (e: RadioChangeEvent) => {\n    setDisplayType(e.target.value as number);\n  };\n\n  const parseResults = (newArr: any) => {\n    if (typeof (newArr || diffResults) === \"string\") return;\n    const initLineGroup = (newArr || diffResults).map(\n      (item: any, index: any, originArr: any) => {\n        let added, removed, value, count;\n        if (isFile) {\n          added = item[0] === \"+\";\n          removed = item[0] === \"-\";\n          value = item.slice(1);\n          count = 1;\n        } else {\n          added = item.added;\n          removed = item.removed;\n          value = item.value;\n          count = item.count;\n        }\n        const strArr = value?.split(\"\\n\").filter((item: any) => item) || [];\n        const type = (added && \"+\") || (removed && \"-\") || \" \";\n        let head, hidden, tail;\n        if (type !== \" \") {\n          hidden = [];\n          tail = [];\n          head = strArr;\n        } else {\n          const strLength = strArr.length;\n          if (strLength <= BLOCK_LENGTH * 2) {\n            hidden = [];\n            tail = [];\n            head = strArr;\n          } else {\n            head = strArr.slice(0, BLOCK_LENGTH);\n            hidden = strArr.slice(BLOCK_LENGTH, strLength - BLOCK_LENGTH);\n            tail = strArr.slice(strLength - BLOCK_LENGTH);\n          }\n        }\n        return {\n          type,\n          count,\n          content: {\n            hidden,\n            head,\n            tail\n          }\n        };\n      }\n    );\n    let lStartNum = 1;\n    let rStartNum = 1;\n    initLineGroup.forEach((item: any) => {\n      const { type, count } = item;\n      item.leftPos = lStartNum;\n      item.rightPos = rStartNum;\n      lStartNum += type === \"+\" ? 0 : count;\n      rStartNum += type === \"-\" ? 0 : count;\n    });\n    setLineGroup(initLineGroup);\n  };\n\n  const renderSplitContent = () => {\n    const length = lineGroup.length;\n    const contentList = [];\n    for (let i = 0; i < length; i++) {\n      const targetBlock = lineGroup[i];\n      const {\n        type,\n        content: { hidden }\n      }: any = targetBlock;\n      if (type === \" \") {\n        contentList.push(\n          <div key={i}>\n            {parseSplitCode(targetBlock)}\n            {(hidden.length && parseHiddenBtn(hidden, i)) || null}\n            {parseSplitCode(targetBlock, false)}\n          </div>\n        );\n      } else if (type === \"-\") {\n        const nextTarget: any = lineGroup[i + 1] || { content: {} };\n        const nextIsPlus = nextTarget.type === \"+\";\n        contentList.push(\n          <div key={i}>\n            {parseCombinePart(targetBlock, nextIsPlus ? nextTarget : {})}\n          </div>\n        );\n        nextIsPlus ? (i = i + 1) : void 0;\n      } else if (type === \"+\") {\n        contentList.push(\n          <div key={i}>{parseCombinePart({}, targetBlock)}</div>\n        );\n      }\n    }\n    return <div>{contentList}</div>;\n  };\n\n  const renderUnifiedContent = () => {\n    return lineGroup.map((item: any, index: any) => {\n      const {\n        type,\n        content: { hidden }\n      } = item;\n      const isNormal = type === \" \";\n      return (\n        <div key={index}>\n          {renderDiffLine(item)}\n          {(hidden.length && isNormal && parseHiddenBtn(hidden, index)) || null}\n          {renderDiffLine(item, false)}\n        </div>\n      );\n    });\n  };\n\n  const parsLineBlock = (type: any, index: any) => {\n    const copyOfLG: any = lineGroup.slice();\n    const targetGroup = copyOfLG[index];\n    const { head, tail, hidden } = targetGroup.content;\n    if (type === \"head\") {\n      targetGroup.content.head = head.concat(hidden.slice(0, BLOCK_LENGTH));\n      targetGroup.content.hidden = hidden.slice(BLOCK_LENGTH);\n    } else if (type === \"tail\") {\n      const hiddenLength = hidden.length;\n      targetGroup.content.tail = hidden\n        .slice(hiddenLength - BLOCK_LENGTH)\n        .concat(tail);\n      targetGroup.content.hidden = hidden.slice(0, hiddenLength - BLOCK_LENGTH);\n    } else {\n      targetGroup.content.head = head.concat(hidden);\n      targetGroup.content.hidden = [];\n    }\n    copyOfLG[index] = targetGroup;\n    setLineGroup(copyOfLG);\n  };\n\n  const parseHiddenBtn = (hidden: any, index: any) => {\n    const isSingle = hidden.length < BLOCK_LENGTH * 2;\n    return (\n      <div key=\"collapse\" className=\"collapsible-wrapper\">\n        <div className={`colLeft ${isSplit ? \"splitWidth\" : \"\"}`}>\n          {isSingle ? (\n            <div className=\"arrow\" onClick={() => parsLineBlock(\"all\", index)}>\n              <All />\n            </div>\n          ) : (\n            <>\n              <div\n                className=\"arrow\"\n                onClick={() => parsLineBlock(\"head\", index)}\n              >\n                <Head />\n              </div>\n              <div\n                className=\"arrow\"\n                onClick={() => parsLineBlock(\"tail\", index)}\n              >\n                <Tail />\n              </div>\n            </>\n          )}\n        </div>\n        <div className={`collRight, ${isSplit ? \"collRightSplit\" : \"\"}`}>\n          <div\n            className={`colRContent ${isSingle ? \"\" : \"cRHeight\"}`}\n          >{`Collapsed: ${hidden.length} lines`}</div>\n        </div>\n      </div>\n    );\n  };\n\n  const parseCombinePart = (leftPart = {}, rightPart = {}) => {\n    const {\n      type: lType,\n      content: lContent,\n      leftPos: lLeftPos\n    }: // rightPos: lRightPos\n    any = leftPart;\n    const {\n      type: rType,\n      content: rContent,\n      // leftPos: rLeftPos,\n      rightPos: rRightPos\n    }: any = rightPart;\n    const leftArr = lContent?.head || [];\n    const rightArr = rContent?.head || [];\n    const lClass = lType === \"+\" ? \"add\" : \"removed\";\n    const rClass = rType === \"+\" ? \"add\" : \"removed\";\n    return (\n      <>\n        <div className=\"iBlock lBorder\">\n          {leftArr.map((item: any, index: any) => {\n            return (\n              <div className={`prBlock ${lClass}`} key={index}>\n                {parseLineNumPadding(lLeftPos + index)}\n                {parsePaddingContent(\"-  \" + item)}\n              </div>\n            );\n          })}\n        </div>\n        <div className={`iBlock ${leftArr.length ? \"\" : \"rBorder\"}`}>\n          {rightArr.map((item: any, index: any) => {\n            return (\n              <div className={`prBlock ${rClass}`} key={index}>\n                {parseLineNumPadding(rRightPos + index)}\n                {parsePaddingContent(\"+  \" + item)}\n              </div>\n            );\n          })}\n        </div>\n      </>\n    );\n  };\n\n  const parseSplitCode = (targetBlock: any, isHead = true) => {\n    const {\n      content: { head, hidden, tail },\n      leftPos,\n      rightPos\n    } = targetBlock;\n    return (isHead ? head : tail).map((item: any, index: any) => {\n      const shift = isHead ? 0 : head.length + hidden.length;\n      return (\n        <div key={(isHead ? \"h-\" : \"t-\") + index}>\n          <div className=\"iBlock lBorder\">\n            {parseLineNumPadding(leftPos + shift + index)}\n            {parsePaddingContent(\"    \" + item)}\n          </div>\n          <div className=\"iBlock\">\n            {parseLineNumPadding(rightPos + shift + index)}\n            {parsePaddingContent(\"    \" + item)}\n          </div>\n        </div>\n      );\n    });\n  };\n\n  const renderDiffLine = (item: any, isHead = true) => {\n    const {\n      type,\n      content: { head, tail, hidden },\n      leftPos,\n      rightPos\n    } = item;\n    const isNormal = type === \" \";\n    const cls = `normal ${type === \"+\" ? \"add\" : \"\"} ${\n      type === \"-\" ? \"removed\" : \"\"\n    }`;\n    const space = \"     \";\n    return (isHead ? head : tail).map((sitem: any, sindex: any) => {\n      let posMark = \"\";\n      if (isNormal) {\n        const shift = isHead ? 0 : head.length + hidden.length;\n        posMark =\n          (space + (leftPos + shift + sindex)).slice(-5) +\n          (space + (rightPos + shift + sindex)).slice(-5);\n      } else {\n        posMark =\n          type === \"-\"\n            ? parseLineNum(leftPos + sindex) + space\n            : space + parseLineNum(rightPos + sindex);\n      }\n      return (\n        <div key={(isHead ? \"h-\" : \"t-\") + sindex} className={cls}>\n          <pre className=\"pre line\">{posMark}</pre>\n          <div className=\"outerPre\">\n            <div className=\"splitCon\">\n              <div className=\"spanWidth\">{\" \" + type + \" \"}</div>\n              {parsePaddingContent(sitem)}\n            </div>\n          </div>\n        </div>\n      );\n    });\n  };\n\n  const parseLineNum = (lineNum: number) => {\n    return (\"     \" + lineNum).slice(-5);\n  };\n\n  const parseLineNumPadding = (origin: any) => {\n    const item = (\"     \" + origin).slice(-5);\n    return <div className=\"splitLN\">{item}</div>;\n  };\n\n  const parsePaddingContent = (item: any) => {\n    return <div className=\"splitCon\">{item}</div>;\n  };\n\n  return (\n    <>\n      <div className=\"radioGroup\">\n        <Radio.Group\n          value={displayType}\n          size=\"small\"\n          onChange={(e: RadioChangeEvent) => onChangeDisplayType(e)}\n        >\n          <Radio.Button value={DISPLAY_TYPE.SPLIT}>Split</Radio.Button>\n          <Radio.Button value={DISPLAY_TYPE.UNIFIED}>Unified</Radio.Button>\n        </Radio.Group>\n      </div>\n\n      <Content className=\"content\">\n        <div className=\"color\">\n          {isSplit ? renderSplitContent() : renderUnifiedContent()}\n        </div>\n      </Content>\n    </>\n  );\n};\n\nexport default ContentDiff;\n","import { useEffect, useState } from \"react\";\nimport { Button, Select, Input, Form } from \"antd\";\n\nimport ContentDiff from \"../ContentDiff\";\nimport \"./styles.css\";\n\nconst jsDiff = require(\"diff\");\nconst FormItem = Form.Item;\nconst { TextArea } = Input;\n\nconst layout = {\n  labelCol: { span: 4 },\n  wrapperCol: { span: 20 }\n};\n\nconst SeleLayout = {\n  labelCol: { span: 10 },\n  wrapperCol: { span: 10 }\n};\n\nconst linesMethods = [\n  \"diffLines\",\n  \"diffTrimmedLines\"\n  // \"diffSentences\",\n  // \"structuredPatch\",\n  // \"createTwoFilesPatch\"\n];\n\nconst InputPanel = () => {\n  const [leftValue, setLeftValue] = useState<string>(\"abc\");\n  const [rightValue, setRightValue] = useState<string>(\"ab\");\n  const [method, setMethod] = useState<string>(\"diffLines\");\n  const [diffResults, setDiffResults] = useState([]);\n\n  useEffect(() => {\n    checkDiff();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const onChangeInput = (\n    type: string,\n    e: React.ChangeEvent<HTMLTextAreaElement>\n  ) => {\n    if (type === \"left\") setLeftValue(e.target.value);\n    if (type === \"right\") setRightValue(e.target.value);\n  };\n\n  const onSelectChange = (value: string) => {\n    setMethod(value);\n  };\n\n  const checkDiff = () => {\n    const results = jsDiff[method](leftValue, rightValue);\n    setDiffResults(results);\n  };\n\n  return (\n    <div className=\"wrapper\">\n      <div className=\"inputWrapper\">\n        <FormItem {...layout} label=\"Left\" className=\"input\">\n          <TextArea\n            style={{ height: 350 }}\n            defaultValue={leftValue}\n            onChange={(e) => onChangeInput(\"left\", e)}\n          />\n        </FormItem>\n        <FormItem {...layout} label=\"Right\" className=\"input\">\n          <TextArea\n            style={{ height: 350 }}\n            defaultValue={rightValue}\n            onChange={(e) => onChangeInput(\"right\", e)}\n          />\n        </FormItem>\n      </div>\n      <div className=\"funWrapper\">\n        <FormItem {...SeleLayout} label=\"Methods\">\n          <Select\n            defaultValue={method}\n            style={{ width: 220 }}\n            onChange={onSelectChange}\n          >\n            {linesMethods.map((item, index) => {\n              return (\n                <Select.Option key={index} value={item}>\n                  {item}\n                </Select.Option>\n              );\n            })}\n          </Select>\n        </FormItem>\n        <Button type=\"primary\" onClick={checkDiff}>\n          Compare\n        </Button>\n      </div>\n      <ContentDiff diffResults={diffResults} isFile={false} />\n    </div>\n  );\n};\n\nexport default InputPanel;\n","import { Layout } from \"antd\";\n\nimport \"./styles.css\";\n\nconst Footer = () => {\n  const { Footer } = Layout;\n\n  return (\n    <Footer className=\"footer\">\n      &#169; 2021 - {new Date().getFullYear()} Check Differ, Xz\n    </Footer>\n  );\n};\n\nexport default Footer;\n","export const content1 = {\n  array: [\"a\", \"b\", \"c\", \"d\", \"e\"],\n  object: {\n    a: \"b\",\n    c: \"d\",\n    e: \"f\",\n    g: \"h\",\n    i: \"j\"\n  }\n};\n","export const content2 = {\n  array: [\"a\", \"b\", \"z\", \"d\", \"e\"],\n  object: {\n    a: \"b\",\n    c2: \"d\",\n    e: \"f\",\n    g: \"h2\",\n    i: \"j\"\n  }\n};\n","import { useState } from \"react\";\nimport { Layout, Menu } from \"antd\";\n\nimport InputPanel from \"./components/InputPanel\";\nimport ContentDiff from \"./components/ContentDiff\";\nimport Footer from \"./components/Footer\";\n\nimport \"./app-styles.css\";\nimport \"./common-styles.css\";\n\nimport { content1 } from \"./tests/content1\";\nimport { content2 } from \"./tests/content2\";\n\nconst jsDiff = require(\"diff\");\n\nconst MENU_TAB = {\n  LINES: \"0\",\n  CONTENT: \"1\"\n};\n\nconst App = () => {\n  const [menuTab, setMenuTab] = useState<string>(MENU_TAB.LINES);\n\n  const onClickChangeMenuTab = (e: any) => {\n    setMenuTab(e.key);\n  };\n\n  const RenderContent = () => {\n    const results = jsDiff.diffJson(content1, content2);\n    return <ContentDiff diffResults={results} isFile={false} />;\n  };\n\n  return (\n    <Layout>\n      <Menu\n        mode=\"horizontal\"\n        onClick={(e: any) => onClickChangeMenuTab(e)}\n        defaultSelectedKeys={[menuTab]}\n      >\n        <Menu.Item key={MENU_TAB.LINES}>Text Diff</Menu.Item>\n        <Menu.Item key={MENU_TAB.CONTENT}>JSON Diff</Menu.Item>\n      </Menu>\n      {menuTab === MENU_TAB.LINES && <InputPanel />}\n      {menuTab === MENU_TAB.CONTENT && <RenderContent />}\n      <Footer />\n    </Layout>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}